
# Edit this file to introduce tasks to be run by cron.
#
# Each task to run has to be defined through a single line
# indicating with different fields when the task will be run
# and what command to run for the task
#
# To define the time you can provide concrete values for
# minute (m), hour (h), day of month (dom), month (mon),
# and day of week (dow) or use '*' in these fields (for 'any').
#
# Notice that tasks will be started based on the cron's system
# daemon's notion of time and timezones.
#
# Output of the crontab jobs (including errors) is sent through
# email to the user the crontab file belongs to (unless redirected).
#
# For example, you can run a backup of all your user accounts
# at 5 a.m every week with:
# 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/
#
# For more information see the manual pages of crontab(5) and cron(8)
#
# m h  dom mon dow   command
* * * * * pgrep smartmeter       > /dev/null || python3.9 /home/pi/pyscripts/smart_meter.py >> /home/pi/cron.log 2>&1
* * * * * pgrep temphandler      > /dev/null || python3.9 /home/pi/pyscripts/temphandler.py >> /home/pi/cron.log 2>&1
* * * * * pgrep ambienttemps     > /dev/null || python3.9 /home/pi/pyscripts/ambientdatasocket.py >> /home/pi/cron.log 2>&1
* * * * * pgrep dht22wifitemps   > /dev/null || python3.9 /home/pi/pyscripts/dht22.py >> /home/pi/cron.log 2>&1
* * * * * pgrep biolertemps      > /dev/null || python3.9 /home/pi/pyscripts/boilertempsdatasocket.py  >> /home/pi/cron.log 2>&1
* * * * * pgrep electricalenergy > /dev/null || python3.9 /home/pi/pyscripts/energydatasocket.py  >> /home/pi/cron.log 2>&1
* * * * * pgrep logo8_server     > /dev/null || authbind python3.9 /home/pi/pyscripts/logo_server2.py -h 192.168.0.240 -u pi -p b%HcSLYsFqOp7E0B*ER8#! >> /home/pi/cron.log 2>&1



